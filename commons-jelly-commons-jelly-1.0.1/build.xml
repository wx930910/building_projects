<?xml version="1.0" encoding="UTF-8"?>

<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<project default="jar" name="commons-jelly" basedir=".">
  <!--Load local and user build preferences-->

  <property file="build.properties">
  </property>
  <property file="${user.home}/build.properties">
  </property>
  <!--Build properties-->

  <property name="defaulttargetdir" value="${basedir}/target">
  </property>
  <property name="libdir" value="${user.home}/.maven/repository">
  </property>
  <property name="classesdir" value="${basedir}/target/classes">
  </property>
  <property name="testclassesdir" value="${basedir}/target/test-classes">
  </property>
  <property name="testreportdir" value="${basedir}/target/test-reports">
  </property>
  <property name="distdir" value="${basedir}/dist">
  </property>
  <property name="javadocdir" value="${basedir}/dist/docs/api">
  </property>
  <property name="final.name" value="commons-jelly-1.0.1">
  </property>
  <property name="proxy.host" value="">
  </property>
  <property name="proxy.port" value="">
  </property>
  <property name="proxy.username" value="">
  </property>
  <property name="proxy.password" value="">
  </property>
  <path id="build.classpath">
    <pathelement location="${libdir}/servlet-api/jars/servlet-api-2.3.jar">
    </pathelement>
    <pathelement location="${libdir}/commons-cli/jars/commons-cli-1.0.jar">
    </pathelement>
    <pathelement location="${libdir}/commons-lang/jars/commons-lang-2.0.jar">
    </pathelement>
    <pathelement location="${libdir}/commons-discovery/jars/commons-discovery-20030211.213356.jar">
    </pathelement>
    <pathelement location="${libdir}/forehead/jars/forehead-1.0-beta-5.jar">
    </pathelement>
    <pathelement location="${libdir}/jstl/jars/jstl-1.0.6.jar">
    </pathelement>
    <pathelement location="${libdir}/junit/jars/junit-3.8.1.jar">
    </pathelement>
    <pathelement location="${libdir}/commons-jexl/jars/commons-jexl-1.0.jar">
    </pathelement>
    <pathelement location="${libdir}/xml-apis/jars/xml-apis-1.0.b2.jar">
    </pathelement>
    <pathelement location="${libdir}/commons-beanutils/jars/commons-beanutils-1.6.jar">
    </pathelement>
    <pathelement location="${libdir}/commons-collections/jars/commons-collections-2.1.jar">
    </pathelement>
    <pathelement location="${libdir}/commons-logging/jars/commons-logging-1.0.3.jar">
    </pathelement>
    <pathelement location="${libdir}/dom4j/jars/dom4j-1.5.2.jar">
    </pathelement>
    <pathelement location="${libdir}/jaxen/jars/jaxen-1.1-beta-4.jar">
    </pathelement>
    <pathelement location="${libdir}/xerces/jars/xerces-2.2.1.jar">
    </pathelement>
  </path>
  <fileset id="sources" dir="${basedir}">
    <include name="BUILDING.md" />
    <include name="CONTRIBUTING.md" />
    <include name="Dockerfile" />
    <include name="KEYS" />
    <include name="LICENSE.txt" />
    <include name="NOTICE.txt" />
    <include name="README-binary-dist.txt" />
    <include name="README.txt" />
    <include name="RELEASE-NOTES.txt" />
    <include name="build.properties.sample" />
    <include name="build.xml" />
    <include name="docker/**" />
    <include name="jelly-tags/**" />
    <include name="maven.xml" />
    <include name="parent-project.xml" />
    <include name="pom.xml" />
    <include name="project.properties" />
    <include name="project.xml" />
    <include name="short-license.txt" />
    <include name="src/**" />
    <include name="xdocs/**" />
  </fileset>
  <fileset id="binaries" dir="dist">
    <include name="${final.name}.jar"/>
    <include name="${final.name}-javadoc.jar"/>
    <include name="${final.name}-sources.jar"/>
    <include name="${final.name}-test-sources.jar"/>
    <include name="${final.name}-tests.jar"/>
    <include name="LICENSE.txt"/>
    <include name="NOTICE.txt"/>
    <include name="README-binary-dist.txt" />
    <include name="RELEASE-NOTES.txt" />
    <include name="docs/**" />
  </fileset>
  <target name="init" description="o Initializes some properties">
    <mkdir dir="${libdir}">
    </mkdir>
    <condition property="noget">
      <equals arg2="only" arg1="${build.sysclasspath}">
      </equals>
    </condition>
    <!--Test if JUNIT is present in ANT classpath-->

    <available property="Junit.present" classname="junit.framework.Test">
    </available>
    <!--Test if user defined a proxy-->

    <condition property="useProxy">
      <and>
        <isset property="proxy.host">
        </isset>
        <not>
          <equals trim="true" arg2="" arg1="${proxy.host}">
          </equals>
        </not>
      </and>
    </condition>
  </target>
  <target name="compile" description="o Compile the code" depends="get-deps">
    <mkdir dir="${classesdir}">
    </mkdir>
    <javac destdir="${classesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
      <src>
        <pathelement location="${basedir}/src/java">
        </pathelement>
      </src>
      <classpath refid="build.classpath">
      </classpath>
    </javac>
    <mkdir dir="${classesdir}/META-INF">
    </mkdir>
    <copy todir="${classesdir}/META-INF">
      <fileset dir="${basedir}/.">
        <include name="NOTICE.txt">
        </include>
      </fileset>
    </copy>
    <copy todir="${classesdir}">
      <fileset dir="${basedir}/src/java">
        <include name="**/*.properties">
        </include>
      </fileset>
    </copy>
    <copy todir="${classesdir}/META-INF" file="${basedir}/LICENSE.txt">
    </copy>
  </target>
  <target name="jar" description="o Create the jar" depends="compile,test">
    <jar jarfile="${defaulttargetdir}/${final.name}.jar" excludes="**/package.html" basedir="${classesdir}">
    </jar>
  </target>
  <target name="clean" description="o Clean up the generated directories">
    <delete dir="${defaulttargetdir}">
    </delete>
    <delete dir="${distdir}">
    </delete>
  </target>
  <target name="dist" description="o Create a distribution" depends="jar, javadoc,
  sources-jar, test-sources-jar, javadoc-jar, tests-jar">
    <mkdir dir="dist">
    </mkdir>
    <copy todir="dist">
      <fileset dir="${defaulttargetdir}" includes="*.jar">
      </fileset>
      <fileset dir="${basedir}" includes="LICENSE*, README*, RELEASE*, NOTICE*">
      </fileset>
    </copy>
    <copy file="pom.xml" tofile="dist/${final.name}.pom" />
    <mkdir dir="dist/sources/${final.name}-src"/>
    <copy todir="dist/sources/${final.name}-src">
      <fileset refid="sources"/>
    </copy>
    <mkdir dir="dist/binaries/${final.name}"/>
    <copy todir="dist/binaries/${final.name}">
      <fileset refid="binaries"/>
    </copy>
    <zip destfile="dist/${final.name}-bin.zip" basedir="dist/binaries"/>
    <tar destfile="dist/${final.name}-bin.tar.gz" basedir="dist/binaries" compression="gzip" />
    <zip destfile="dist/${final.name}-src.zip" basedir="dist/sources"/>
    <tar destfile="dist/${final.name}-src.tar.gz" basedir="dist/sources" compression="gzip"/>
    <delete dir="dist/sources" />
    <delete dir="dist/binaries" />
  </target>
  <target name="test" description="o Run the test cases" if="test.failure" depends="internal-test">
    <fail message="There were test failures.">
    </fail>
  </target>
  <target name="internal-test" if="Junit.present" depends="junit-present,compile-tests">
    <mkdir dir="${testreportdir}">
    </mkdir>
    <junit dir="${basedir}" failureproperty="test.failure" printSummary="yes" fork="true" haltonerror="true">
      <sysproperty key="basedir" value=".">
      </sysproperty>
      <formatter type="xml">
      </formatter>
      <formatter usefile="false" type="plain">
      </formatter>
      <classpath>
        <path refid="build.classpath">
        </path>
        <pathelement path="${testclassesdir}">
        </pathelement>
        <pathelement path="${classesdir}">
        </pathelement>
      </classpath>
      <batchtest todir="${testreportdir}">
        <fileset dir="${basedir}/src/test">
          <include name="**/Test*.java">
          </include>
          <exclude name="**/TestCoreMemoryLeak.java">
          </exclude>
        </fileset>
      </batchtest>
    </junit>
  </target>
  <target name="junit-present" unless="Junit.present" depends="init">
    <echo>================================= WARNING ================================</echo>
    <echo>Junit isn't present in your ${ANT_HOME}/lib directory. Tests not executed.</echo>
    <echo>==========================================================================</echo>
  </target>
  <target name="compile-tests" if="Junit.present" depends="junit-present,compile">
    <mkdir dir="${testclassesdir}">
    </mkdir>
    <javac destdir="${testclassesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
      <src>
        <pathelement location="${basedir}/src/test">
        </pathelement>
      </src>
      <classpath>
        <path refid="build.classpath">
        </path>
        <pathelement path="${classesdir}">
        </pathelement>
      </classpath>
    </javac>
    <copy todir="${testclassesdir}">
      <fileset dir="${basedir}/src/test">
        <include name="META-INF/services/*">
        </include>
        <include name="**/*.jelly">
        </include>
        <include name="**/*.xml">
        </include>
        <include name="**/*.xsl">
        </include>
        <include name="**/*.rng">
        </include>
        <include name="**/*.dtd">
        </include>
        <include name="**/*.properties">
        </include>
        <include name="**/*.html">
        </include>
      </fileset>
    </copy>
  </target>
  <target name="javadoc" description="o Generate javadoc" depends="get-deps">
    <mkdir dir="${javadocdir}">
    </mkdir>
    <tstamp>
      <format pattern="2002-yyyy" property="year">
      </format>
    </tstamp>
    <property name="copyright" value="Copyright &amp;copy;  Apache Software Foundation. All Rights Reserved.">
    </property>
    <property name="title" value="commons-jelly 1.0 API">
    </property>
    <javadoc use="true" private="true" destdir="${javadocdir}" author="true" version="true" sourcepath="${basedir}/src/java" packagenames="org.apache.commons.jelly.*">
      <classpath>
        <path refid="build.classpath">
        </path>
      </classpath>
    </javadoc>
  </target>
  <target name="javadoc-jar" description="o Generate javadoc-jar" depends="javadoc">
    <jar destfile="${defaulttargetdir}/${final.name}-javadoc.jar">
      <fileset dir="${distdir}/docs" includes="**/**"/>
    </jar>
  </target>
  <target name="sources-jar" description="o Generate sources-jar" depends="compile">
    <jar destfile="${defaulttargetdir}/${final.name}-sources.jar">
      <fileset dir="${basedir}/src/java" includes="**/**"/>
    </jar>
  </target>
  <target name="tests-jar" description="o Generate tests-jar" depends="compile-tests">
    <jar destfile="${defaulttargetdir}/${final.name}-tests.jar">
      <fileset dir="${defaulttargetdir}/test-classes" includes="**/**"/>
    </jar>
  </target>
  <target name="test-sources-jar" description="o Generate test-sources-jar" depends="compile">
    <jar destfile="${defaulttargetdir}/${final.name}-test-sources.jar">
      <fileset dir="${basedir}/src/test" includes="**/**"/>
    </jar>
  </target>
  <target name="get-dep-servletapi.jar" description="o Download the dependency : servlet-api.jar" unless="servlet-api.jar" depends="init,setProxy,noProxy,get-custom-dep-servletapi.jar">
    <mkdir dir="${libdir}/servlet-api/jars/">
    </mkdir>
    <get dest="${libdir}/servlet-api/jars/servlet-api-2.3.jar" usetimestamp="true" ignoreerrors="true" src="https://search.maven.org/remotecontent?filepath=javax/servlet/servlet-api/2.3/servlet-api-2.3.jar">
    </get>
  </target>
  <target name="get-custom-dep-servletapi.jar" if="servlet-api.jar" depends="init,setProxy,noProxy">
    <mkdir dir="${libdir}/servlet-api/jars/">
    </mkdir>
    <get dest="${libdir}/servlet-api/jars/servlet-api-2.3.jar" usetimestamp="true" ignoreerrors="true" src="${servletapi.jar}">
    </get>
  </target>
  <target name="get-dep-commons-cli.jar" description="o Download the dependency : commons-cli.jar" unless="commons-cli.jar" depends="init,setProxy,noProxy,get-custom-dep-commons-cli.jar">
    <mkdir dir="${libdir}/commons-cli/jars/">
    </mkdir>
    <get dest="${libdir}/commons-cli/jars/commons-cli-1.0.jar" usetimestamp="true" ignoreerrors="true" src="https://search.maven.org/remotecontent?filepath=commons-cli/commons-cli/1.0/commons-cli-1.0.jar">
    </get>
  </target>
  <target name="get-custom-dep-commons-cli.jar" if="commons-cli.jar" depends="init,setProxy,noProxy">
    <mkdir dir="${libdir}/commons-cli/jars/">
    </mkdir>
    <get dest="${libdir}/commons-cli/jars/commons-cli-1.0.jar" usetimestamp="true" ignoreerrors="true" src="${commons-cli.jar}">
    </get>
  </target>
  <target name="get-dep-commons-lang.jar" description="o Download the dependency : commons-lang.jar" unless="commons-lang.jar" depends="init,setProxy,noProxy,get-custom-dep-commons-lang.jar">
    <mkdir dir="${libdir}/commons-lang/jars/">
    </mkdir>
    <get dest="${libdir}/commons-lang/jars/commons-lang-2.0.jar" usetimestamp="true" ignoreerrors="true" src="https://search.maven.org/remotecontent?filepath=commons-lang/commons-lang/2.0/commons-lang-2.0.jar">
    </get>
  </target>
  <target name="get-custom-dep-commons-lang.jar" if="commons-lang.jar" depends="init,setProxy,noProxy">
    <mkdir dir="${libdir}/commons-lang/jars/">
    </mkdir>
    <get dest="${libdir}/commons-lang/jars/commons-lang-2.0.jar" usetimestamp="true" ignoreerrors="true" src="${commons-lang.jar}">
    </get>
  </target>
  <target name="get-dep-commons-discovery.jar" description="o Download the dependency : commons-discovery.jar" unless="commons-discovery.jar" depends="init,setProxy,noProxy,get-custom-dep-commons-discovery.jar">
    <mkdir dir="${libdir}/commons-discovery/jars/">
    </mkdir>
    <get dest="${libdir}/commons-discovery/jars/commons-discovery-20030211.213356.jar" usetimestamp="true" ignoreerrors="true" src="https://search.maven.org/remotecontent?filepath=commons-discovery/commons-discovery/20030211.213356/commons-discovery-20030211.213356.jar">
    </get>
  </target>
  <target name="get-custom-dep-commons-discovery.jar" if="commons-discovery.jar" depends="init,setProxy,noProxy">
    <mkdir dir="${libdir}/commons-discovery/jars/">
    </mkdir>
    <get dest="${libdir}/commons-discovery/jars/commons-discovery-20030211.213356.jar" usetimestamp="true" ignoreerrors="true" src="${commons-discovery.jar}">
    </get>
  </target>
  <target name="get-dep-forehead.jar" description="o Download the dependency : forehead.jar" unless="forehead.jar" depends="init,setProxy,noProxy,get-custom-dep-forehead.jar">
    <mkdir dir="${libdir}/forehead/jars/">
    </mkdir>
    <get dest="${libdir}/forehead/jars/forehead-1.0-beta-5.jar" usetimestamp="true" ignoreerrors="true" src="https://search.maven.org/remotecontent?filepath=forehead/forehead/1.0-beta-5/forehead-1.0-beta-5.jar">
    </get>
  </target>
  <target name="get-custom-dep-forehead.jar" if="forehead.jar" depends="init,setProxy,noProxy">
    <mkdir dir="${libdir}/forehead/jars/">
    </mkdir>
    <get dest="${libdir}/forehead/jars/forehead-1.0-beta-5.jar" usetimestamp="true" ignoreerrors="true" src="${forehead.jar}">
    </get>
  </target>
  <target name="get-dep-jstl.jar" description="o Download the dependency : jstl.jar" unless="jstl.jar" depends="init,setProxy,noProxy,get-custom-dep-jstl.jar">
    <mkdir dir="${libdir}/jstl/jars/">
    </mkdir>
    <get dest="${libdir}/jstl/jars/jstl-1.0.6.jar" usetimestamp="true" ignoreerrors="true" src="https://search.maven.org/remotecontent?filepath=javax/servlet/jstl/1.0.6/jstl-1.0.6.jar">
    </get>
  </target>
  <target name="get-custom-dep-jstl.jar" if="jstl.jar" depends="init,setProxy,noProxy">
    <mkdir dir="${libdir}/jstl/jars/">
    </mkdir>
    <get dest="${libdir}/jstl/jars/jstl-1.0.6.jar" usetimestamp="true" ignoreerrors="true" src="${jstl.jar}">
    </get>
  </target>
  <target name="get-dep-junit.jar" description="o Download the dependency : junit.jar" unless="junit.jar" depends="init,setProxy,noProxy,get-custom-dep-junit.jar">
    <mkdir dir="${libdir}/junit/jars/">
    </mkdir>
    <get dest="${libdir}/junit/jars/junit-3.8.1.jar" usetimestamp="true" ignoreerrors="true" src="https://search.maven.org/remotecontent?filepath=junit/junit/3.8.1/junit-3.8.1.jar">
    </get>
  </target>
  <target name="get-custom-dep-junit.jar" if="junit.jar" depends="init,setProxy,noProxy">
    <mkdir dir="${libdir}/junit/jars/">
    </mkdir>
    <get dest="${libdir}/junit/jars/junit-3.8.1.jar" usetimestamp="true" ignoreerrors="true" src="${junit.jar}">
    </get>
  </target>
  <target name="get-dep-commons-jexl.jar" description="o Download the dependency : commons-jexl.jar" unless="commons-jexl.jar" depends="init,setProxy,noProxy,get-custom-dep-commons-jexl.jar">
    <mkdir dir="${libdir}/commons-jexl/jars/">
    </mkdir>
    <get dest="${libdir}/commons-jexl/jars/commons-jexl-1.0.jar" usetimestamp="true" ignoreerrors="true" src="https://search.maven.org/remotecontent?filepath=commons-jexl/commons-jexl/1.0/commons-jexl-1.0.jar">
    </get>
  </target>
  <target name="get-custom-dep-commons-jexl.jar" if="commons-jexl.jar" depends="init,setProxy,noProxy">
    <mkdir dir="${libdir}/commons-jexl/jars/">
    </mkdir>
    <get dest="${libdir}/commons-jexl/jars/commons-jexl-1.0.jar" usetimestamp="true" ignoreerrors="true" src="${commons-jexl.jar}">
    </get>
  </target>
  <target name="get-dep-xml-apis.jar" description="o Download the dependency : xml-apis.jar" unless="xml-apis.jar" depends="init,setProxy,noProxy,get-custom-dep-xml-apis.jar">
    <mkdir dir="${libdir}/xml-apis/jars/">
    </mkdir>
    <get dest="${libdir}/xml-apis/jars/xml-apis-1.0.b2.jar" usetimestamp="true" ignoreerrors="true" src="https://search.maven.org/remotecontent?filepath=xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar">
    </get>
  </target>
  <target name="get-custom-dep-xml-apis.jar" if="xml-apis.jar" depends="init,setProxy,noProxy">
    <mkdir dir="${libdir}/xml-apis/jars/">
    </mkdir>
    <get dest="${libdir}/xml-apis/jars/xml-apis-1.0.b2.jar" usetimestamp="true" ignoreerrors="true" src="${xml-apis.jar}">
    </get>
  </target>
  <target name="get-dep-commons-beanutils.jar" description="o Download the dependency : commons-beanutils.jar" unless="commons-beanutils.jar" depends="init,setProxy,noProxy,get-custom-dep-commons-beanutils.jar">
    <mkdir dir="${libdir}/commons-beanutils/jars/">
    </mkdir>
    <get dest="${libdir}/commons-beanutils/jars/commons-beanutils-1.6.jar" usetimestamp="true" ignoreerrors="true" src="https://search.maven.org/remotecontent?filepath=commons-beanutils/commons-beanutils/1.6/commons-beanutils-1.6.jar">
    </get>
  </target>
  <target name="get-custom-dep-commons-beanutils.jar" if="commons-beanutils.jar" depends="init,setProxy,noProxy">
    <mkdir dir="${libdir}/commons-beanutils/jars/">
    </mkdir>
    <get dest="${libdir}/commons-beanutils/jars/commons-beanutils-1.6.jar" usetimestamp="true" ignoreerrors="true" src="${commons-beanutils.jar}">
    </get>
  </target>
  <target name="get-dep-commons-collections.jar" description="o Download the dependency : commons-collections.jar" unless="commons-collections.jar" depends="init,setProxy,noProxy,get-custom-dep-commons-collections.jar">
    <mkdir dir="${libdir}/commons-collections/jars/">
    </mkdir>
    <get dest="${libdir}/commons-collections/jars/commons-collections-2.1.jar" usetimestamp="true" ignoreerrors="true" src="https://search.maven.org/remotecontent?filepath=commons-collections/commons-collections/2.1/commons-collections-2.1.jar">
    </get>
  </target>
  <target name="get-custom-dep-commons-collections.jar" if="commons-collections.jar" depends="init,setProxy,noProxy">
    <mkdir dir="${libdir}/commons-collections/jars/">
    </mkdir>
    <get dest="${libdir}/commons-collections/jars/commons-collections-2.1.jar" usetimestamp="true" ignoreerrors="true" src="${commons-collections.jar}">
    </get>
  </target>
  <target name="get-dep-commons-logging.jar" description="o Download the dependency : commons-logging.jar" unless="commons-logging.jar" depends="init,setProxy,noProxy,get-custom-dep-commons-logging.jar">
    <mkdir dir="${libdir}/commons-logging/jars/">
    </mkdir>
    <get dest="${libdir}/commons-logging/jars/commons-logging-1.0.3.jar" usetimestamp="true" ignoreerrors="true" src="https://search.maven.org/remotecontent?filepath=commons-logging/commons-logging/1.0.3/commons-logging-1.0.3.jar">
    </get>
  </target>
  <target name="get-custom-dep-commons-logging.jar" if="commons-logging.jar" depends="init,setProxy,noProxy">
    <mkdir dir="${libdir}/commons-logging/jars/">
    </mkdir>
    <get dest="${libdir}/commons-logging/jars/commons-logging-1.0.3.jar" usetimestamp="true" ignoreerrors="true" src="${commons-logging.jar}">
    </get>
  </target>
  <target name="get-dep-dom4j.jar" description="o Download the dependency : dom4j.jar" unless="dom4j.jar" depends="init,setProxy,noProxy,get-custom-dep-dom4j.jar">
    <mkdir dir="${libdir}/dom4j/jars/">
    </mkdir>
    <get dest="${libdir}/dom4j/jars/dom4j-1.5.2.jar" usetimestamp="true" ignoreerrors="true" src="https://search.maven.org/remotecontent?filepath=dom4j/dom4j/1.5.2/dom4j-1.5.2.jar">
    </get>
  </target>
  <target name="get-custom-dep-dom4j.jar" if="dom4j.jar" depends="init,setProxy,noProxy">
    <mkdir dir="${libdir}/dom4j/jars/">
    </mkdir>
    <get dest="${libdir}/dom4j/jars/dom4j-1.5.2.jar" usetimestamp="true" ignoreerrors="true" src="${dom4j.jar}">
    </get>
  </target>
  <target name="get-dep-jaxen.jar" description="o Download the dependency : jaxen.jar" unless="jaxen.jar" depends="init,setProxy,noProxy,get-custom-dep-jaxen.jar">
    <mkdir dir="${libdir}/jaxen/jars/">
    </mkdir>
    <get dest="${libdir}/jaxen/jars/jaxen-1.1-beta-4.jar" usetimestamp="true" ignoreerrors="true" src="https://search.maven.org/remotecontent?filepath=jaxen/jaxen/1.1-beta-4/jaxen-1.1-beta-4.jar">
    </get>
  </target>
  <target name="get-custom-dep-jaxen.jar" if="jaxen.jar" depends="init,setProxy,noProxy">
    <mkdir dir="${libdir}/jaxen/jars/">
    </mkdir>
    <get dest="${libdir}/jaxen/jars/jaxen-1.1-beta-4.jar" usetimestamp="true" ignoreerrors="true" src="${jaxen.jar}">
    </get>
  </target>
  <target name="get-dep-xerces.jar" description="o Download the dependency : xerces.jar" unless="xerces.jar" depends="init,setProxy,noProxy,get-custom-dep-xerces.jar">
    <mkdir dir="${libdir}/xerces/jars/">
    </mkdir>
    <get dest="${libdir}/xerces/jars/xerces-2.2.1.jar" usetimestamp="true" ignoreerrors="true" src="https://search.maven.org/remotecontent?filepath=xerces/xercesImpl/2.2.1/xercesImpl-2.2.1.jar">
    </get>
  </target>
  <target name="get-custom-dep-xerces.jar" if="xerces.jar" depends="init,setProxy,noProxy">
    <mkdir dir="${libdir}/xerces/jars/">
    </mkdir>
    <get dest="${libdir}/xerces/jars/xerces-2.2.1.jar" usetimestamp="true" ignoreerrors="true" src="${xerces.jar}">
    </get>
  </target>
  <target name="get-deps" unless="noget" depends="get-dep-servletapi.jar,get-dep-commons-cli.jar,get-dep-commons-lang.jar,get-dep-commons-discovery.jar,get-dep-forehead.jar,get-dep-jstl.jar,get-dep-junit.jar,get-dep-commons-jexl.jar,get-dep-xml-apis.jar,get-dep-commons-beanutils.jar,get-dep-commons-collections.jar,get-dep-commons-logging.jar,get-dep-dom4j.jar,get-dep-jaxen.jar,get-dep-xerces.jar">
  </target>
  <target name="setProxy" if="useProxy" depends="init">
    <!--Proxy settings works only with a JDK 1.2 and higher.-->

    <echo>Proxy used :</echo>
    <echo>Proxy host [${proxy.host}]</echo>
    <echo>Proxy port [${proxy.port}]</echo>
    <echo>Proxy user [${proxy.username}]</echo>
    <setproxy proxyuser="${proxy.username}" proxyport="${proxy.port}" proxypassword="${proxy.password}" proxyhost="${proxy.host}">
    </setproxy>
  </target>
  <target name="noProxy" unless="useProxy" depends="init">
    <echo>Proxy not used.</echo>
  </target>
  <target name="install-maven">
    <get dest="${user.home}/maven-install-latest.jar" usetimestamp="true" src="${repo}/maven/maven-install-latest.jar">
    </get>
    <unjar dest="${maven.home}" src="${user.home}/maven-install-latest.jar">
    </unjar>
  </target>
</project>